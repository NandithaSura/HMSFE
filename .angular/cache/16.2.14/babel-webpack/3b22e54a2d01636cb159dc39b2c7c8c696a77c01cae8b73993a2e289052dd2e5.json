{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class DoctorloginComponent {\n  constructor(authSrv, router) {\n    this.authSrv = authSrv;\n    this.router = router;\n    this.doctor = {};\n  }\n  onSubmit() {\n    // Send the patient data to the server for insertion\n    this.authSrv.doctorLogin(this.doctor).subscribe(response => {\n      console.log('Patient added successfully:', response);\n      // Reset the form after successful submission\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('role', response.role);\n      localStorage.setItem('doctorId', response.doctorId);\n      this.router.navigate(['/doctorhome']);\n      this.doctor = {};\n    }, error => {\n      console.error('Error adding patient:', error);\n      // Handle error response here\n    });\n  }\n  static #_ = this.ɵfac = function DoctorloginComponent_Factory(t) {\n    return new (t || DoctorloginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorloginComponent,\n    selectors: [[\"app-doctorlogin\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"form-container\"], [3, \"ngSubmit\"], [\"for\", \"email\"], [\"type\", \"email\", \"required\", \"\", \"placeholder\", \"Enter your email\", \"name\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"required\", \"\", \"placeholder\", \"Enter your password\", \"name\", \"Password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [1, \"a\"], [\"routerLink\", \"/\"], [\"routerLink\", \"/doctorSignup\"]],\n    template: function DoctorloginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function DoctorloginComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"h1\");\n        i0.ɵɵtext(3, \"Patient Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\")(5, \"label\", 2);\n        i0.ɵɵtext(6, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorloginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.patient.Email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\")(9, \"label\", 4);\n        i0.ɵɵtext(10, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorloginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.patient.Password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"a\", 8);\n        i0.ɵɵtext(16, \"patient signup\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 9);\n        i0.ɵɵtext(18, \"doctor signup\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.patient.Email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.patient.Password);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"\\n\\n.form-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  max-width: 400px;\\n  margin: auto; \\n\\n  margin-top: 10vh; \\n\\n  padding: 20px;\\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\\n  border-radius: 8px;\\n  background-color: #ffffff; \\n\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.form-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\n.form-container[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%], .form-container[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  font-size: 16px;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n}\\n\\n.form-container[_ngcontent-%COMP%]   button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 12px;\\n  font-size: 18px;\\n  background-color: #4CAF50;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  transition: background-color 0.2s ease;\\n}\\n\\n.form-container[_ngcontent-%COMP%]   button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n\\n.link-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  margin-top: 10px;\\n}\\n\\n.btn-link[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n  color: #333;\\n  padding: 10px;\\n  border: 1px solid #333;\\n  border-radius: 4px;\\n  text-align: center;\\n  transition: background-color 0.3s ease, color 0.3s ease;\\n}\\n\\n.btn-link[_ngcontent-%COMP%]:hover {\\n  background-color: #333;\\n  color: #fff;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hdXRoL2RvY3RvcmxvZ2luL2RvY3RvcmxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0RBQStEO0FBQy9EO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLFlBQVksRUFBRSw0Q0FBNEM7RUFDMUQsZ0JBQWdCLEVBQUUsaURBQWlEO0VBQ25FLGFBQWE7RUFDYixxQ0FBcUM7RUFDckMsa0JBQWtCO0VBQ2xCLHlCQUF5QixFQUFFLHlDQUF5QztBQUN0RTs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCOztBQUVBOztFQUVFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsZUFBZTtFQUNmLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYixlQUFlO0VBQ2YseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixzQ0FBc0M7QUFDeEM7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixXQUFXO0VBQ1gsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLHVEQUF1RDtBQUN6RDs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixXQUFXO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDZW50ZXJpbmcgdGhlIGZvcm0tY29udGFpbmVyIHdpdGhvdXQgYWZmZWN0aW5nIGJvZHkgc3R5bGVzICovXHJcbi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1heC13aWR0aDogNDAwcHg7XHJcbiAgbWFyZ2luOiBhdXRvOyAvKiBBdXRvbWF0aWNhbGx5IGNlbnRlcnMgd2l0aGluIGl0cyBwYXJlbnQgKi9cclxuICBtYXJnaW4tdG9wOiAxMHZoOyAvKiBBZGRzIHRvcCBtYXJnaW4gdG8gY2VudGVyIHZlcnRpY2FsbHkgYXMgd2VsbCAqL1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwwLDAsMC4xKTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsgLyogRW5zdXJlcyB0aGUgZm9ybSBiYWNrZ3JvdW5kIGlzIHdoaXRlICovXHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIHtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uZm9ybS1jb250YWluZXIgbGFiZWwge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxuLmZvcm0tY29udGFpbmVyIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcclxuLmZvcm0tY29udGFpbmVyIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuLmZvcm0tY29udGFpbmVyIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiAxMnB4O1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZTtcclxufVxyXG5cclxuLmZvcm0tY29udGFpbmVyIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDVhMDQ5O1xyXG59XHJcblxyXG4ubGluay1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5idG4tbGluayB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiAjMzMzO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzMzMztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlLCBjb2xvciAwLjNzIGVhc2U7XHJcbn1cclxuXHJcbi5idG4tbGluazpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcclxuICBjb2xvcjogI2ZmZjtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["DoctorloginComponent","constructor","authSrv","router","doctor","onSubmit","doctorLogin","subscribe","response","console","log","localStorage","setItem","token","role","doctorId","navigate","error","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","_2","selectors","decls","vars","consts","template","DoctorloginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","DoctorloginComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","DoctorloginComponent_Template_input_ngModelChange_7_listener","$event","patient","Email","DoctorloginComponent_Template_input_ngModelChange_11_listener","Password","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\nandi\\OneDrive\\Desktop\\New folder (2)\\HMSFE\\src\\app\\components\\auth\\doctorlogin\\doctorlogin.component.ts","C:\\Users\\nandi\\OneDrive\\Desktop\\New folder (2)\\HMSFE\\src\\app\\components\\auth\\doctorlogin\\doctorlogin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-doctorlogin',\r\n  templateUrl: './doctorlogin.component.html',\r\n  styleUrls: ['./doctorlogin.component.css']\r\n})\r\nexport class DoctorloginComponent {\r\n  doctor: any = {};\r\n\r\n  constructor(private authSrv: AuthService, private router: Router){}\r\n\r\n  onSubmit() {\r\n    // Send the patient data to the server for insertion\r\n    this.authSrv.doctorLogin(this.doctor)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log('Patient added successfully:', response);\r\n          // Reset the form after successful submission\r\n          localStorage.setItem('token', response.token);\r\n          localStorage.setItem('role', response.role);\r\n          localStorage.setItem('doctorId', response.doctorId);\r\n          this.router.navigate(['/doctorhome'])\r\n          this.doctor = {};\r\n        },\r\n        (error) => {\r\n          console.error('Error adding patient:', error);\r\n          // Handle error response here\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"form-container\">\r\n  <form (ngSubmit)=\"onSubmit()\" >\r\n    <h1>Patient Login</h1>\r\n    <div>\r\n      <label for=\"email\">Email:</label>\r\n      <input type=\"email\" required placeholder=\"Enter your email\" [(ngModel)]=\"patient.Email\" name=\"Email\">\r\n    </div>\r\n    <div>\r\n      <label for=\"password\">Password:</label>\r\n      <input type=\"password\" required placeholder=\"Enter your password\" [(ngModel)]=\"patient.Password\" name=\"Password\">\r\n    </div>\r\n    <button type=\"submit\">Login</button>\r\n    <div class=\"a\">\r\n      <a routerLink=\"/\">patient signup</a>\r\n      <a routerLink=\"/doctorSignup\">doctor signup</a>\r\n    </div>\r\n\r\n  </form>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}