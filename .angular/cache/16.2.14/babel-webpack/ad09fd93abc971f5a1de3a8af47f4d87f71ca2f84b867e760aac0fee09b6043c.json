{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class DoctorloginComponent {\n  constructor(authSrv, router) {\n    this.authSrv = authSrv;\n    this.router = router;\n    this.doctor = {};\n  }\n  onSubmit() {\n    // Send the patient data to the server for insertion\n    this.authSrv.doctorLogin(this.doctor).subscribe(response => {\n      console.log('Patient added successfully:', response);\n      // Reset the form after successful submission\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('role', response.role);\n      localStorage.setItem('doctorId', response.doctorId);\n      this.router.navigate(['/doctorhome']);\n      this.doctor = {};\n    }, error => {\n      console.error('Error adding patient:', error);\n      // Handle error response here\n    });\n  }\n  static #_ = this.ɵfac = function DoctorloginComponent_Factory(t) {\n    return new (t || DoctorloginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorloginComponent,\n    selectors: [[\"app-doctorlogin\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"form-container\"], [3, \"ngSubmit\"], [\"for\", \"email\"], [\"type\", \"email\", \"required\", \"\", \"placeholder\", \"Enter your email\", \"name\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"required\", \"\", \"placeholder\", \"Enter your password\", \"name\", \"Password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [1, \"a\"], [\"routerLink\", \"/doctorSignup\"], [\"routerLink\", \"/\"]],\n    template: function DoctorloginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function DoctorloginComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"h1\");\n        i0.ɵɵtext(3, \"Doctor Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\")(5, \"label\", 2);\n        i0.ɵɵtext(6, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorloginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.doctor.Email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\")(9, \"label\", 4);\n        i0.ɵɵtext(10, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function DoctorloginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.doctor.Password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"a\", 8);\n        i0.ɵɵtext(16, \"doctor signup\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 9);\n        i0.ɵɵtext(18, \"patient signup\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.doctor.Email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.doctor.Password);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\".form-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 300px;\\n  margin: auto;\\n}\\n\\n.form-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\n.form-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n\\n.form-container[_ngcontent-%COMP%]   input[type=\\\"email\\\"][_ngcontent-%COMP%], .form-container[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 8px;\\n  font-size: 16px;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n}\\n\\n.form-container[_ngcontent-%COMP%]   button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  font-size: 16px;\\n  background-color: #4CAF50;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\n.form-container[_ngcontent-%COMP%]   button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n\\n.a[_ngcontent-%COMP%]{\\n  display: flex;\\n}\\na[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n  color: #333;\\n  padding: 10px;\\n  margin: 10px;\\n  border: 1px solid #333;\\n  border-radius: 4px;\\n  width: 100px;\\n  text-align: center;\\n  background-color: #fff;\\n  transition: background-color 0.3s ease;\\n}\\n\\na[_ngcontent-%COMP%]:hover {\\n  background-color: #333;\\n  color: #fff;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hdXRoL2RvY3RvcmxvZ2luL2RvY3RvcmxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7O0VBRUUsV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlO0VBQ2Ysc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLGVBQWU7RUFDZix5QkFBeUI7RUFDekIsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0UscUJBQXFCO0VBQ3JCLFdBQVc7RUFDWCxhQUFhO0VBQ2IsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsc0NBQXNDO0FBQ3hDOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLFdBQVc7QUFDYiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHdpZHRoOiAzMDBweDtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi5mb3JtLWNvbnRhaW5lciBkaXYge1xyXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbi5mb3JtLWNvbnRhaW5lciBsYWJlbCB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5mb3JtLWNvbnRhaW5lciBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXHJcbi5mb3JtLWNvbnRhaW5lciBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDhweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuLmZvcm0tY29udGFpbmVyIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmZvcm0tY29udGFpbmVyIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDVhMDQ5O1xyXG59XHJcblxyXG4uYXtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcbmEge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBjb2xvcjogIzMzMztcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIG1hcmdpbjogMTBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjMzMzO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICB3aWR0aDogMTAwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XHJcbn1cclxuXHJcbmE6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgY29sb3I6ICNmZmY7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["DoctorloginComponent","constructor","authSrv","router","doctor","onSubmit","doctorLogin","subscribe","response","console","log","localStorage","setItem","token","role","doctorId","navigate","error","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","_2","selectors","decls","vars","consts","template","DoctorloginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","DoctorloginComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","DoctorloginComponent_Template_input_ngModelChange_7_listener","$event","Email","DoctorloginComponent_Template_input_ngModelChange_11_listener","Password","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\nandi\\OneDrive\\Desktop\\New folder (2)\\HMSFE\\src\\app\\components\\auth\\doctorlogin\\doctorlogin.component.ts","C:\\Users\\nandi\\OneDrive\\Desktop\\New folder (2)\\HMSFE\\src\\app\\components\\auth\\doctorlogin\\doctorlogin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-doctorlogin',\r\n  templateUrl: './doctorlogin.component.html',\r\n  styleUrls: ['./doctorlogin.component.css']\r\n})\r\nexport class DoctorloginComponent {\r\n  doctor: any = {};\r\n\r\n  constructor(private authSrv: AuthService, private router: Router){}\r\n\r\n  onSubmit() {\r\n    // Send the patient data to the server for insertion\r\n    this.authSrv.doctorLogin(this.doctor)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log('Patient added successfully:', response);\r\n          // Reset the form after successful submission\r\n          localStorage.setItem('token', response.token);\r\n          localStorage.setItem('role', response.role);\r\n          localStorage.setItem('doctorId', response.doctorId);\r\n          this.router.navigate(['/doctorhome'])\r\n          this.doctor = {};\r\n        },\r\n        (error) => {\r\n          console.error('Error adding patient:', error);\r\n          // Handle error response here\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","<div class=\"form-container\">\r\n  <form (ngSubmit)=\"onSubmit()\" >\r\n    <h1>Doctor Login</h1>\r\n    <div>\r\n      <label for=\"email\">Email:</label>\r\n      <input type=\"email\" required placeholder=\"Enter your email\" [(ngModel)]=\"doctor.Email\" name=\"Email\">\r\n    </div>\r\n    <div>\r\n      <label for=\"password\">Password:</label>\r\n      <input type=\"password\" required placeholder=\"Enter your password\" [(ngModel)]=\"doctor.Password\" name=\"Password\">\r\n    </div>\r\n    <button type=\"submit\">Login</button>\r\n    <div class=\"a\">\r\n      <a routerLink=\"/doctorSignup\">doctor signup</a>\r\n      <a routerLink=\"/\">patient signup</a>\r\n    </div>\r\n\r\n  </form>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}