{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/common\";\nfunction LabresultsComponentadmin_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"p\")(3, \"strong\");\n    i0.ɵɵtext(4, \"Result ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\")(7, \"strong\");\n    i0.ɵɵtext(8, \"Test ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\")(11, \"strong\");\n    i0.ɵɵtext(12, \"Patient ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\")(15, \"strong\");\n    i0.ɵɵtext(16, \"Doctor ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"p\")(19, \"strong\");\n    i0.ɵɵtext(20, \"Result Details:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"p\")(23, \"strong\");\n    i0.ɵɵtext(24, \"Result Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25);\n    i0.ɵɵpipe(26, \"date\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const result_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", result_r1.ResultID, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", result_r1.TestID, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", result_r1.PatientID, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", result_r1.DoctorID, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", result_r1.ResultDetails, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(26, 6, result_r1.ResultDate), \"\");\n  }\n}\nexport class LabresultsComponentadmin {\n  constructor(authSrv) {\n    this.authSrv = authSrv;\n    this.labresults = [];\n  }\n  ngOnInit() {\n    this.authSrv.getalltestresults().subscribe(data => {\n      this.labresults = data;\n      console.log(this.labresults);\n    });\n  }\n  static #_ = this.ɵfac = function LabresultsComponentadmin_Factory(t) {\n    return new (t || LabresultsComponentadmin)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LabresultsComponentadmin,\n    selectors: [[\"app-labresults\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"result-item\"]],\n    template: function LabresultsComponentadmin_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LabresultsComponentadmin_div_0_Template, 27, 8, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.labresults);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.DatePipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","result_r1","ResultID","TestID","PatientID","DoctorID","ResultDetails","ɵɵpipeBind1","ResultDate","LabresultsComponentadmin","constructor","authSrv","labresults","ngOnInit","getalltestresults","subscribe","data","console","log","_","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","LabresultsComponentadmin_Template","rf","ctx","ɵɵtemplate","LabresultsComponentadmin_div_0_Template","ɵɵproperty"],"sources":["C:\\Users\\nandi\\OneDrive\\Desktop\\New folder (2)\\HMSFE\\src\\app\\components\\admin\\labresults\\labresults.component.ts","C:\\Users\\nandi\\OneDrive\\Desktop\\New folder (2)\\HMSFE\\src\\app\\components\\admin\\labresults\\labresults.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-labresults',\n  templateUrl: './labresults.component.html',\n  styleUrls: ['./labresults.component.css']\n})\nexport class LabresultsComponentadmin implements OnInit{\n  labresults : any[]=[]\n  constructor(private authSrv: AuthService){}\n  ngOnInit(): void {\n      this.authSrv.getalltestresults().subscribe(data =>{\n        this.labresults=data\n        console.log(this.labresults)\n      })\n  }\n}\n","<div *ngFor=\"let result of labresults\">\n    <div class=\"result-item\">\n      <p><strong>Result ID:</strong> {{ result.ResultID }}</p>\n      <p><strong>Test ID:</strong> {{ result.TestID }}</p>\n      <p><strong>Patient ID:</strong> {{ result.PatientID }}</p>\n      <p><strong>Doctor ID:</strong> {{ result.DoctorID }}</p>\n      <p><strong>Result Details:</strong> {{ result.ResultDetails }}</p>\n      <p><strong>Result Date:</strong> {{ result.ResultDate | date }}</p>\n    </div>\n  </div>\n  \n"],"mappings":";;;;;ICAAA,EAAA,CAAAC,cAAA,UAAuC;IAEtBD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACxDH,EAAA,CAAAC,cAAA,QAAG;IAAQD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACpDH,EAAA,CAAAC,cAAA,SAAG;IAAQD,EAAA,CAAAE,MAAA,mBAAW;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC1DH,EAAA,CAAAC,cAAA,SAAG;IAAQD,EAAA,CAAAE,MAAA,kBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACxDH,EAAA,CAAAC,cAAA,SAAG;IAAQD,EAAA,CAAAE,MAAA,uBAAe;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAClEH,EAAA,CAAAC,cAAA,SAAG;IAAQD,EAAA,CAAAE,MAAA,oBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAA8B;;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IALpCH,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,kBAAA,MAAAC,SAAA,CAAAC,QAAA,KAAqB;IACvBP,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,kBAAA,MAAAC,SAAA,CAAAE,MAAA,KAAmB;IAChBR,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,kBAAA,MAAAC,SAAA,CAAAG,SAAA,KAAsB;IACvBT,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,kBAAA,MAAAC,SAAA,CAAAI,QAAA,KAAqB;IAChBV,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,kBAAA,MAAAC,SAAA,CAAAK,aAAA,KAA0B;IAC7BX,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAK,kBAAA,MAAAL,EAAA,CAAAY,WAAA,QAAAN,SAAA,CAAAO,UAAA,MAA8B;;;ADCrE,OAAM,MAAOC,wBAAwB;EAEnCC,YAAoBC,OAAoB;IAApB,KAAAA,OAAO,GAAPA,OAAO;IAD3B,KAAAC,UAAU,GAAS,EAAE;EACqB;EAC1CC,QAAQA,CAAA;IACJ,IAAI,CAACF,OAAO,CAACG,iBAAiB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAChD,IAAI,CAACJ,UAAU,GAACI,IAAI;MACpBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,UAAU,CAAC;IAC9B,CAAC,CAAC;EACN;EAAC,QAAAO,CAAA,G;qBARUV,wBAAwB,EAAAd,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAxBd,wBAAwB;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRrCnC,EAAA,CAAAqC,UAAA,IAAAC,uCAAA,kBASQ;;;QATgBtC,EAAA,CAAAuC,UAAA,YAAAH,GAAA,CAAAnB,UAAA,CAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}